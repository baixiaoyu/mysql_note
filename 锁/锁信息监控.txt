查看innodb存储引擎的状态
1show engine innodb status\G
2查看锁的信息
select * from information_schema.innodb_locks;
select * from  information_schema.innodb_lock_waits;

未提交事务
select * from information_schema.innodb_trx;

查看等待列表
SELECT r.trx_id waiting_trx_id, r.trx_mysql_thread_id waiting_thread, left(r.trx_query,20) waiting_query, concat(concat(lw.lock_type, ' '), lw.lock_mode) waiting_for_lock, b.trx_id blocking_trx_id, b.trx_mysql_thread_id blocking_thread, left(b.trx_query,20) blocking_query, concat(concat(lb.lock_type, ' '), lb.lock_mode) blocking_lock FROM information_schema.innodb_lock_waits w INNER JOIN information_schema.innodb_trx b ON b.trx_id = w.blocking_trx_id   INNER JOIN information_schema.innodb_trx r ON r.trx_id = w.requesting_trx_id INNER JOIN information_schema.innodb_locks lw ON lw.lock_trx_id = r.trx_id INNER JOIN information_schema.innodb_locks lb ON lb.lock_trx_id = b.trx_id\G

3mutex_instance这个表记录了服务器启动以来所有的冲突
select * from mutext_instance where locked_by_thread_id is not null\G;
要找出这些冲突，可以查询events_waits_current;
select thread_id,event_id,event_name,source,timer_start,object_instance_begin,operation from events_waits_current where thread_id in(select locked_by_thread_id from mutext_instances where locked_by_thread_id is not null\G;
select * from thread;
kill 10;---杀掉线程


有的时候再show engine innodb status\G中看到了事务被阻塞了，但是只是知道对应的线程id，想要查看具体的sql语句，可以在general log中看
select * from mysql.general_log;
查看事务在等待哪种类型的锁
select thread_id,event_name,source,operation,processlist_id from events_waits_current join threads using(thread_id) where processlist_id >0;
事务正在等待的所有锁信息
select * from innodb_lock_waits;
阻塞的事务列表
select * from innodb_locks where lock_trx_id in(select blocking_trx_id from innodb_lock_waits);
特定表上的锁列表
select * from innodb_locks where lock_table='db_name.table_name';
等待锁的事务列表
select trx_id,trx_requested_lock_id,trx_mysql_thread_id,trx_query from innodb_trx where trx_state='lock wait';

找到执行时间很长的事务
select trx_id,trx_mysql_thread_id from innodb_trx where timediff(now(),trx_started)>'00:30:00';
找到哪些线程正在等待锁
select trx_id,trx_mysql_thread_id,trx_requested_lock_id,trx_wait_started from innodb_trx where trx_state='lock wait';
等待某一锁的时间超过指定时间
select trx_id,trx_mysql_thred_id,trx_requested_lock_id,trx_wait_started from innodb_trx where timediff(now(),trx_wait_started)>'00:30:00';

查看事务锁定多少行，更新行数等
select trx_id,trx_mysql_thread_id,trx_rows_modified from innodb_trx order by trx_rows_modified desc;



元数据锁，当有事务在使用表的时候，不允许对这个表在进行ddl语句。


查看阻塞来源的sql
SELECT r.trx_id AS waiting_trx_id,  r.trx_mysql_thread_id AS waiting_thread,
       TIMESTAMPDIFF(SECOND, r.trx_wait_started, CURRENT_TIMESTAMP) AS wait_time,
       r.trx_query AS waiting_query,
       l.lock_table AS waiting_table_lock,
       b.trx_id AS blocking_trx_id, b.trx_mysql_thread_id AS blocking_thread,
       SUBSTRING(p.host, 1, INSTR(p.host, ':') - 1) AS blocking_host,
       SUBSTRING(p.host, INSTR(p.host, ':') +1) AS blocking_port,
       IF(p.command = "Sleep", p.time, 0) AS idle_in_trx,
       b.trx_query AS blocking_query
FROM          INFORMATION_SCHEMA.INNODB_LOCK_WAITS AS w
   INNER JOIN INFORMATION_SCHEMA.INNODB_TRX        AS b ON  b.trx_id = w.blocking_trx_id
   INNER JOIN INFORMATION_SCHEMA.INNODB_TRX        AS r ON  r.trx_id = w.requesting_trx_id
   INNER JOIN INFORMATION_SCHEMA.INNODB_LOCKS      AS l ON  w.requested_lock_id = l.lock_id
   LEFT JOIN  INFORMATION_SCHEMA.PROCESSLIST       AS p ON  p.id     = b.trx_mysql_thread_id
ORDER BY wait_time DESC\G


SELECT CONCAT('thread ', b.trx_mysql_thread_id, ' from ', p.host) AS who_blocks,
       IF(p.command = "Sleep", p.time, 0) AS idle_in_trx,
       MAX(TIMESTAMPDIFF(SECOND, r.trx_wait_started, CURRENT_TIMESTAMP)) AS max_wait_time,
       COUNT(*) AS num_waiters
FROM          INFORMATION_SCHEMA.INNODB_LOCK_WAITS AS w
   INNER JOIN INFORMATION_SCHEMA.INNODB_TRX        AS b ON  b.trx_id = w.blocking_trx_id
   INNER JOIN INFORMATION_SCHEMA.INNODB_TRX        AS r ON  r.trx_id = w.requesting_trx_id
   LEFT JOIN  INFORMATION_SCHEMA.PROCESSLIST       AS p ON  p.id     = b.trx_mysql_thread_id
GROUP BY who_blocks ORDER BY num_waiters DESC\G



